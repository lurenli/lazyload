@charset "UTF-8";
/* line 4, src/css/style.scss */
html, body {
  background: black;
}

/* line 5, src/css/style.scss */
body {
  width: 1260px;
  margin: 0 auto;
}

/* line 6, src/css/style.scss */
h1, h2 {
  color: white;
  padding: 0 10px;
}

/* line 7, src/css/style.scss */
h1 {
  font-size: 64px;
  height: 200px;
  line-height: 200px;
  font-family: 'Alfa Slab One', cursive;
  font-weight: 400;
  font-style: normal;
}

/* line 8, src/css/style.scss */
h2 {
  font-size: 32px;
  height: 64px;
  line-height: 64px;
  font-family: 'Courgette', cursive;
}

/* line 9, src/css/style.scss */
pre {
  font-size: 14px;
  line-height: 150%;
  margin: 0 10px;
  padding: 10px 16px;
  border: 1px #444 solid;
  color: white;
  border-radius: 4px;
  margin-bottom: 40px;
}

/* line 10, src/css/style.scss */
.main {
  width: 1260px;
  overflow: hidden;
  zoom: 100%;
  display: inline;
  margin-bottom: 10px;
}

/* line 11, src/css/style.scss */
.depict {
  font-size: 16px;
  line-height: 180%;
  color: white;
  margin: 0 10px;
  margin-bottom: 40px;
}

/* line 12, src/css/style.scss */
.imgBox {
  width: 400px;
  height: 250px;
  margin: 0 10px 20px 10px;
  float: left;
  background-color: #222;
  position: relative;
}

/* line 13, src/css/style.scss */
.img {
  width: 400px;
  height: 250px;
}

/* line 14, src/css/style.scss */
.lazy_tip {
  height: 32px;
  line-height: 32px;
  padding: 0 10px;
  position: absolute;
  color: white;
  font-size: 12px;
  left: 0;
  top: 0;
}

/* line 15, src/css/style.scss */
.imgBg {
  width: 400px;
  height: 250px;
  background-color: #222;
  background-size: 100% 100%;
}

/* line 16, src/css/style.scss */
.imgLoadTip {
  position: absolute;
  left: 50%;
  top: 50%;
  margin: -50px 0 0 -30px;
}

/* line 17, src/css/style.scss */
.imgLoadTipText {
  width: 100%;
  height: 20px;
  line-height: 20px;
  position: absolute;
  left: 0;
  top: 50%;
  margin-top: 20px;
  font-size: 12px;
  color: #393939;
  text-align: center;
}

/* line 18, src/css/style.scss */
.forkme {
  position: absolute;
  top: 0;
  right: 0;
}

/* line 19, src/css/style.scss */
.code {
  font-size: 14px;
  margin: 0 10px;
  line-height: 150%;
  padding: 8px 10px;
  margin-bottom: 40px;
}

/* line 20, src/css/style.scss */
.code textarea {
  display: none;
}

/*# sourceMappingURL=data:application/json;base64, */